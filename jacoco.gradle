apply plugin:  'jacoco'

jacoco {
    toolVersion = "0.8.1"
    //reportsDir = file("$buildDir/JacocoReportDir")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

project.afterEvaluate {
    android.applicationVariants.all { variant ->
        def variantName = variant.name
        def testTaskName = "test${variantName.capitalize()}UnitTest"


        tasks.create(name: "${testTaskName}Coverage", type: JacocoReport, dependsOn: "$testTaskName") {
            group = "Reporting"
            description = "Generate Jacoco coverage reports for ${variantName.capitalize()} build."

            reports {
                html.enabled = true
                xml {
                    enabled = true
                    destination file("build/reports/jacoco.xml")
                }
            }

            def excludes = [
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*Test*.*',
                    '**/*Activity.*',
                    'android/**/*.*'
            ]
            def kotlinClasses = fileTree(dir: "${buildDir}/tmp/kotlin/${variantName}", excludes: excludes)
            classDirectories.setFrom(files([kotlinClasses]))

            sourceDirectories.setFrom(files([
                    "$project.projectDir/src/main/java",
                    "$project.projectDir/src/${variantName}/java",
                    "$project.projectDir/src/main/kotlin",
                    "$project.projectDir/src/${variantName}/kotlin"
            ]))

            executionData.setFrom(files("${project.buildDir}/jacoco/${testTaskName}.exec"))
        }
    }
}